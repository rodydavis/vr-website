{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/marked/lib/marked.js","webpack:///./src/index.js","webpack:///(webpack)/buildin/global.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","global","root","block","newline","code","fences","noop","hr","heading","nptable","blockquote","list","html","def","table","lheading","paragraph","text","Lexer","options","this","tokens","links","marked","defaults","rules","normal","pedantic","gfm","tables","_label","_title","edit","replace","getRegex","bullet","item","source","_tag","_comment","merge","lex","src","token","top","next","loose","cap","bull","b","listStart","listItems","space","tag","isordered","istask","ischecked","exec","substring","length","push","type","rtrim","lang","depth","header","splitCells","align","split","cells","test","ordered","start","match","indexOf","RegExp","smartLists","slice","join","charAt","undefined","task","checked","sanitize","pre","sanitizer","toLowerCase","href","title","Error","charCodeAt","inline","escape","autolink","url","link","reflink","nolink","strong","em","br","del","InlineLexer","renderer","Renderer","breaks","TextRenderer","Parser","encode","escapeTest","escapeReplace","ch","replacements","escapeTestNoEncode","escapeReplaceNoEncode","unescape","_","String","fromCharCode","parseInt","regex","opt","val","cleanUrl","base","prot","decodeURIComponent","e","originIndependentUrl","baseUrls","resolveUrl","encodeURI","_escapes","_scheme","_email","_attribute","_href","_extended_email","_backpedal","output","prevCapZero","out","mangle","inLink","inRawBlock","trim","outputLink","escapes","codespan","smartypants","image","Math","random","toString","escaped","highlight","langPrefix","quote","level","raw","headerIds","headerPrefix","xhtml","body","listitem","checkbox","tablerow","content","tablecell","flags","baseUrl","parse","inlineText","reverse","tok","pop","peek","parseText","row","cell","j","&","<",">","\"","'","obj","target","arguments","tableRow","count","offset","str","curr","splice","invert","suffLen","currChar","substr","callback","pending","done","err","message","silent","setOptions","getDefaults","parser","lexer","inlineLexer","window","__webpack_exports__","marked__WEBPACK_IMPORTED_MODULE_0__","marked__WEBPACK_IMPORTED_MODULE_0___default","AFRAME","registerSystem","schema","normalFont","boldFont","[object Object]","style","document","createElement","textContent","data","head","prepend","registerComponent","wrapCount","default","padding","renderedHtml","className","appendChild","container","el","node","scaleFactor","nodeName","liRect","getClientRects","getComputedStyle","listStyleType","numEl","parentNode","nodeIndex","childNode","childNodes","setAttribute","system","fontSize","parseFloat","x","y","z","left","circleEl","textEl","rect","wrapCountDecrease","bold","includes","font","negate","anchor","baseline","color","width","previousSibling","brRect","height","naturalWidth","imgEl","imgRect","_render","child","_traverse","template","querySelector","innerHTML","imagePromises","querySelectorAll","forEach","img","complete","Promise","resolve","reject","addEventListener","console","warn","all","object3D","position","set","background","emit","g","Function"],"mappings":"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","file":"aframe-markdown.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2018, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=\\\\h*\\\\n)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=\\\\h*\\\\n)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading| {0,3}>|<\\/?(?:tag)(?: +|\\n|\\/?>)|<(?:script|pre|style|!--))[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\n? *\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n  table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n});\n\n/**\n * Pedantic grammar\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = Object.create(null);\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.pedantic) {\n    this.rules = block.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? rtrim(cap, '\\n')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      listStart = {\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : '',\n        loose: false\n      };\n\n      this.tokens.push(listStart);\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      listItems = [];\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          listStart.loose = true;\n        }\n\n        // Check for task list items\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        t = {\n          type: 'list_item_start',\n          task: istask,\n          checked: ischecked,\n          loose: loose\n        };\n\n        listItems.push(t);\n        this.tokens.push(t);\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      if (listStart.loose) {\n        l = listItems.length;\n        i = 0;\n        for (; i < l; i++) {\n          listItems[i].loose = true;\n        }\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(href(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s])__(?!_)|^\\*\\*([^\\s])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*\"<\\[])\\*(?!\\*)|^_([^\\s][\\s\\S]*?[^\\s_])_(?!_|[^\\s.])|^_([^\\s_][\\s\\S]*?[^\\s])_(?!_|[^\\s.])|^\\*([^\\s\"<\\[][\\s\\S]*?[^\\s*])\\*(?!\\*)|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noop,\n  text: /^(`+|[^`])[\\s\\S]*?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/\n};\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]?|`[^`]*`|[^\\[\\]\\\\])*?/;\ninline._href = /\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|(?:\\\\[()]?|\\([^\\s\\x00-\\x1f\\\\]*\\)|[^\\s\\x00-\\x1f()\\\\])*?)/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: edit(inline.text)\n    .replace(']|', '~]|')\n    .replace('|$', '|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@|$')\n    .getRegex()\n});\n\ninline.gfm.url = edit(inline.gfm.url)\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace('{2,}', '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      src = src.substring(cap[0].length);\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = true;\n      } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = false;\n      }\n\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0];\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      href = cap[2];\n      if (this.options.pedantic) {\n        link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      out += this.outputLink(cap, {\n        href: InlineLexer.escapes(href),\n        title: InlineLexer.escapes(title)\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (this.inRawBlock) {\n        out += this.renderer.text(cap[0]);\n      } else {\n        out += this.renderer.text(escape(this.smartypants(cap[0])));\n      }\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\nInlineLexer.escapes = function(text) {\n  return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || marked.defaults;\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  if (this.options.headerIds) {\n    return '<h'\n      + level\n      + ' id=\"'\n      + this.options.headerPrefix\n      + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n      + '\">'\n      + text\n      + '</h'\n      + level\n      + '>\\n';\n  }\n  // ignore IDs\n  return '<h' + level + '>' + text + '</h' + level + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.checkbox = function(checked) {\n  return '<input '\n    + (checked ? 'checked=\"\" ' : '')\n    + 'disabled=\"\" type=\"checkbox\"'\n    + (this.options.xhtml ? ' /' : '')\n    + '> ';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  if (body) body = '<tbody>' + body + '</tbody>';\n\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + body\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' align=\"' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n  var out = '<a href=\"' + escape(href) + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n};\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n};\n\nTextRenderer.prototype.br = function() {\n  return '';\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)));\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n      var loose = this.token.loose;\n\n      if (this.token.task) {\n        body += this.renderer.checkbox(this.token.checked);\n      }\n\n      while (this.next().type !== 'list_item_end') {\n        body += !loose && this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      // TODO parse inline content if parameter markdown=1\n      return this.renderer.html(this.token.text);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  if (encode) {\n    if (escape.escapeTest.test(html)) {\n      return html.replace(escape.escapeReplace, function (ch) { return escape.replacements[ch]; });\n    }\n  } else {\n    if (escape.escapeTestNoEncode.test(html)) {\n      return html.replace(escape.escapeReplaceNoEncode, function (ch) { return escape.replacements[ch]; });\n    }\n  }\n\n  return html;\n}\n\nescape.escapeTest = /[&<>\"']/;\nescape.escapeReplace = /[&<>\"']/g;\nescape.replacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\n\nescape.escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nescape.escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n        var escaped = false,\n            curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/),\n      i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  if (str.length === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  var suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < str.length) {\n    var currChar = str.charAt(str.length - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, str.length - suffLen);\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.getDefaults = function () {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: new Renderer(),\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tables: true,\n    xhtml: false\n  };\n};\n\nmarked.defaults = marked.getDefaults();\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  root.marked = marked;\n}\n})(this || (typeof window !== 'undefined' ? window : global));\n","import marked from \"marked\";\n\nAFRAME.registerSystem(\"markdown\", {\n  schema: {\n    normalFont: { type: \"string\" },\n    boldFont: { type: \"string\" }\n  },\n  init() {\n    const style = document.createElement('style');\n    style.textContent = `\n      @font-face {\n        font-family: \"Roboto\";\n        src: \n          url(\"${this.data.normalFont.replace(\"-msdf.json\", \".ttf\")}\"),\n          url(\"${this.data.boldFont.replace(\"-msdf.json\", \".ttf\")}\");\n      }\n      .aframe-markdown-rendered-html {\n        font-family: \"Roboto\";\n        position: absolute;\n        top: 0;\n        left: -9999px;\n      }\n      .aframe-markdown-rendered-html img {\n        width: 100%;\n      }\n    `;\n    document.head.prepend(style);\n  }\n});\n\nAFRAME.registerComponent(\"markdown\", {\n  schema: {\n    src: { type: \"string\" },\n    wrapCount: { type: \"number\", default: 40 },\n    padding: { type: \"number\", default: 0.05 }\n  },\n  init() {\n    this.renderedHtml = document.createElement(\"div\");\n    this.renderedHtml.className = \"aframe-markdown-rendered-html\";\n    document.body.appendChild(this.renderedHtml);\n    this.container = document.createElement(\"a-entity\");\n    this.el.appendChild(this.container);\n  },\n  _render(node, offset, scaleFactor) {\n    offset = offset / scaleFactor;\n    // Note: There are lots of magic numbers here. These will probably only work will for the default Roboto font.\n    // In theory you could calculate all the adjustments correctly based off the actual text metrics instead.\n    switch(node.nodeName) {\n      case \"LI\":\n        const liRect = node.getClientRects()[0];\n        const style = window.getComputedStyle(node);\n        if (style.listStyleType === \"decimal\") {\n          const numEl = document.createElement(\"a-text\");\n\n          const start = node.parentNode.start;\n          let nodeIndex = 0;\n          for (const childNode of node.parentNode.childNodes) {\n            if (childNode.nodeName === \"LI\") nodeIndex++;\n            if (childNode === node) break;\n          }\n          numEl.setAttribute(\"value\", start + nodeIndex - 1 + \".\");\n\n          numEl.setAttribute(\"color\", \"black\");\n          numEl.setAttribute(\"font\", this.system.data.normalFont);\n          numEl.setAttribute(\"align\", \"right\");\n\n          const fontSize = parseFloat(style.fontSize) / scaleFactor * 4.44;\n          numEl.setAttribute(\"scale\", {x: fontSize, y: fontSize, z: fontSize});\n\n          numEl.setAttribute(\"position\", {\n            x: liRect.left / scaleFactor - offset,\n            y: -liRect.top / scaleFactor - fontSize / 16\n          });\n\n          this.container.appendChild(numEl);\n        } else {\n          const circleEl = document.createElement(\"a-circle\");\n          circleEl.setAttribute(\"segments\", 8);\n          circleEl.setAttribute(\"radius\", 0.008);\n          circleEl.setAttribute(\"color\", \"black\");\n\n          const fontSize = parseFloat(style.fontSize) / scaleFactor * 25;\n          circleEl.setAttribute(\"scale\", {x: fontSize, y: fontSize, z: fontSize});\n\n          circleEl.setAttribute(\"position\", {\n            x: liRect.left / scaleFactor - offset - fontSize / 50,\n            y: -liRect.top / scaleFactor - fontSize / 70\n          });\n\n          this.container.appendChild(circleEl);\n        }\n        break;\n      case \"#text\":\n        const textEl = document.createElement(\"a-entity\");\n        const rect = node.parentNode.getClientRects()[0];\n        const wrapCountDecrease = (rect.left / scaleFactor * 20 - offset * 20);\n\n        const bold = [\"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\"].includes(node.parentNode.nodeName); \n\n        textEl.setAttribute(\"text\", {\n          font: bold ? this.system.data.boldFont : this.system.data.normalFont,\n          negate: !bold,\n          value: node.textContent.replace(/\\n/g, ''),\n          anchor: 'left', baseline: 'top', color: \"black\",\n          width: rect.width / scaleFactor / 2,\n          wrapCount: this.data.wrapCount - wrapCountDecrease\n        });\n\n        const fontSize = parseFloat(window.getComputedStyle(node.parentNode).fontSize) / 8;\n        textEl.setAttribute(\"scale\", {x: fontSize, y: fontSize, z: fontSize});\n\n        let y;\n        if (node.previousSibling && node.previousSibling.nodeName === \"BR\") {\n          const brRect = node.previousSibling.getClientRects()[0];\n          y = -(brRect.top + brRect.height) / scaleFactor;\n        } else {\n          y = -rect.top / scaleFactor;\n        }\n\n        textEl.setAttribute(\"position\", {x: rect.left / scaleFactor - offset, y});\n\n        this.container.appendChild(textEl);\n        break;\n      case \"IMG\":\n        if (node.naturalWidth === 0) return;\n        const imgEl = document.createElement(\"a-image\");\n        const imgRect = node.getClientRects()[0];\n        imgEl.setAttribute(\"src\", node.src);\n        imgEl.setAttribute(\"side\", \"front\");\n        imgEl.setAttribute(\"scale\", {\n          x: imgRect.width / scaleFactor,\n          y: imgRect.height / scaleFactor});\n        imgEl.setAttribute(\"position\", {\n          x: imgRect.width / scaleFactor / 2,\n          y: -imgRect.top / scaleFactor - imgRect.height / scaleFactor / 2\n        });\n        this.container.appendChild(imgEl);\n        break;\n    }\n  },\n  _traverse(node, offset, scaleFactor) {\n    this._render(node, offset, scaleFactor);\n    for (const child of node.childNodes) {\n      this._traverse(child, offset, scaleFactor);\n    }\n  },\n  async update() {\n    const template = document.createElement(\"template\");\n\n    let node;\n    try {\n      node = document.querySelector(this.data.src);\n    } catch(e) {}\n    const src = node ? node.data : this.data.src;\n\n    template.innerHTML = marked(src);\n\n    this.renderedHtml.innerHTML = \"\";\n    this.renderedHtml.style.width = `${this.data.wrapCount * 45.3 / 80}em`;\n    this.renderedHtml.appendChild(template.content);\n\n    const imagePromises = [];\n    this.renderedHtml.querySelectorAll(\"img\").forEach(img => {\n      if (img.complete) return;\n      imagePromises.push(new Promise((resolve, reject) => {\n        img.addEventListener(\"load\", resolve);\n        img.addEventListener(\"error\", () => {\n          console.warn(`markdown: Image failed to load - ${img.src}`);\n          resolve();\n        });\n      }));\n    });\n    await Promise.all(imagePromises);\n\n    this.container.innerHTML = '';\n    const rect = this.renderedHtml.getClientRects()[0];\n    const scaleFactor = 600;\n    this.container.object3D.position.set(-rect.width / scaleFactor / 2, rect.height / scaleFactor / 2, 0);\n    this._traverse(this.renderedHtml, rect.left, scaleFactor);\n\n    const background = document.createElement('a-plane');\n    background.setAttribute('position', `${rect.width / scaleFactor / 2} ${-rect.height/ scaleFactor / 2} -0.001`);\n    background.setAttribute('scale', `${rect.width / scaleFactor + this.data.padding} ${rect.height/ scaleFactor + this.data.padding} 1`);\n    background.setAttribute('roughness', 1);\n    background.setAttribute('side', 'double');\n    this.container.appendChild(background);\n\n    this.container.emit(\"rendered\");\n  }\n});\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}